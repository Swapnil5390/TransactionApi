[
  {
    "ContainingType": "TransactionAPI.Controllers.TransactionsController",
    "Method": "AddAllTransaction",
    "RelativePath": "api/Transactions/AddAllTransaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addTransaction",
        "Type": "TransactionAPI.Model.AddTransaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TransactionAPI.Controllers.TransactionsController",
    "Method": "deleteTransaction",
    "RelativePath": "api/Transactions/deleteTransaction",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deleteTransaction",
        "Type": "TransactionAPI.Model.DeleteTransaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TransactionAPI.Controllers.TransactionsController",
    "Method": "GetTransaction",
    "RelativePath": "api/Transactions/GetTransaction",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sortproperty",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TransactionAPI.Controllers.TransactionsController",
    "Method": "purgeTransaction",
    "RelativePath": "api/Transactions/purgeTransaction",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deleteTransaction",
        "Type": "TransactionAPI.Model.DeleteTransaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TransactionAPI.Controllers.TransactionsController",
    "Method": "updateTransaction",
    "RelativePath": "api/Transactions/updateTransaction",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateTransactionRequest",
        "Type": "TransactionAPI.Model.UpdateTransactionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TransactionAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TransactionAPI.WeatherForecast, TransactionAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]